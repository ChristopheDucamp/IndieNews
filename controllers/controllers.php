<?php
use Cake\I18n\I18n;
define('APP', dirname(__FILE__).'/../'); // cakephp i18n needs this

define('LANG_REGEX', '(en|sv|de)');

function getPostsForParentID($parentID) {
  return ORM::for_table('posts')->raw_query('
    SELECT *, GREATEST(1, TIMESTAMPDIFF(HOUR, date_submitted, NOW())) AS age
    FROM posts
    ORDER BY date_submitted DESC
  ')->find_many();
}

function respondWithFormat($app, $html, $format) {
  $res = $app->response();
  if($format == 'json') {
    $parser = new mf2\Parser($html);
    $output = $parser->parse();
    $output['note'][] = "This JSON is automatically generated by parsing the microformats from the HTML representation of this page using the php-mf2 library.";
    $output['note'][] = "You can find the php-mf2 library at github.com/indieweb/php-mf2";
    $output['note'][] = "If you see a problem with the output, please let me know! (github.com/aaronpk/IndieNews/issues)";
    $res['Content-Type'] = 'application/json';
    $res->body(json_encode($output));
  } else {
    $res->body($html);
  }
}

// Strip the http:// prefix
function slugForURL($url) {
  return preg_replace('/https?:\/\//', '', $url);
}

// Home Page
$app->get('/', function() use($app) {
  $app->redirect('/en', 302);
});

$app->get('/:lang(.:format)', function($lang='en', $format='html') use($app) {

  I18n::locale($lang);

  $req = $app->request();

  $res = $app->response();
  $res['X-Pingback'] = 'https://webmention.io/webmention?forward=' . Config::$baseURL . '/'.$lang.'/webmention';
  $res['Link'] = '<' . Config::$baseURL . '/'.$lang.'/webmention>; rel="webmention"';

  // Get posts ordered by date submitted
  $posts = ORM::for_table('posts')
    ->where('lang', $lang)
    ->order_by_desc('date_submitted');

  if(array_key_exists('before', $req->params())) {
    $before = date('Y-m-d H:i:s', b60to10($req->params()['before']));
    $posts = $posts->where_lt('date_submitted', $before);
  }

  $posts = $posts->limit(20)->find_many();

  ob_start();
  render('posts', array(
    'title' => 'IndieNews',
    'posts' => $posts,
    'view' => 'list',
    'meta' => '',
    'lang' => $lang
  ));
  $html = ob_get_clean();
  respondWithFormat($app, $html, $format);
})->conditions(array('format'=>'json', 'lang'=>LANG_REGEX));

// Redirect old feed URLs
$app->get('/:path(.:format)', function($path, $format='html') use($app) {
  $app->redirect('/en'.($format == 'json' ? '.json' : ''), 301);
})->conditions(array('format'=>'json','path'=>'(home|newest)'));

// Post IDs. Redirect to the post URL version
$app->get('/post/:id(.:format)', function($id, $format='html') use($app) {

  $post = ORM::for_table('posts')->where('id', $id)->find_one();

  if(!$post) {
    $app->pass(); // Will trigger a 404 error
  }

  $app->redirect(Config::$baseURL . '/post/' . slugForURL($post->href) . ($format == 'html' ? '' : '.'.$format), 302);

})->conditions(array('id'=>'\d+', 'format'=>'json'));


$app->get('/(:lang)/:slug(.:format)', function($lang, $slug, $format='html') use($app) {

  I18n::locale($lang);

  $post = ORM::for_table('posts')->where_in('href', array('http://'.$slug,'https://'.$slug))->find_one();
  $posts = array($post);

  if(!$post) {
    $app->pass(); // Will trigger a 404 error
  }

  ob_start();
  render('post', array(
    'title' => $post->title,
    'post' => $post,
    'view' => 'single',
    'meta' => '',
    'lang' => $lang
  ));
  $html = ob_get_clean();
  respondWithFormat($app, $html, $format);

})->conditions(array('lang'=>LANG_REGEX, 'slug'=>'.+\..+/.+?', 'format'=>'json'));



$app->get('/(:lang)/submit', function($lang) use($app) {
  I18n::locale($lang);

  render('submit', array(
    'title' => 'About IndieNews',
    'meta' => '',
    'lang' => $lang
  ));
})->conditions(array('lang'=>LANG_REGEX));

$app->get('/how-to-submit-a-post', function() use($app) {
  render('submit-full', array(
    'title' => 'IndieNews - How to submit a post',
    'meta' => ''
  ));
});
$app->get('/how', function() use($app) {
  $app->redirect('/how-to-submit-a-post', 301);
});
$app->get('/how-to-comment', function() use($app) {
  $app->redirect('/how-to-submit-a-post', 301);
});
$app->get('/technology', function() use($app) {
  render('technology', array(
    'title' => 'The Technology Behind IndieNews',
    'meta' => ''
  ));
});
$app->get('/constructing-post-urls', function() use($app) {
  $app->redirect('/how-to-submit-a-post', 301);
});

// Log in with IndieAuth
$app->get('/indieauth', function() use($app) {

  $req = $app->request();
  $params = $req->params();

  if(array_key_exists('token', $params)) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, 'https://indieauth.com/verify?code=' . $params['token']);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
    $auth = json_decode(curl_exec($ch));
    if($auth) {
      $_SESSION['user'] = $auth->me;

      // Create the user record if it doesn't yet exist
      $user = ORM::for_table('users')->where('url', session('user'))->find_one();

      if($user == FALSE) {
        $user = ORM::for_table('users')->create();
        $user->url = session('user');
        $user->date_created = date('Y-m-d H:i:s');
        $user->save();
      }

    }
    $app->redirect('/?error=verify_failed', 301);
  }

  $app->redirect('/?error=no_code', 301);
});

$app->get('/signout', function() use($app) {
  unset($_SESSION['user']);
  $app->redirect('/', 301);
});
